import Link from 'next/link';
import EmptyState from "@/components/ui/EmptyState";
import {getVacancies} from "@/lib/data/vacancies";

async function VacancyList({schoolId}) {
    try {
        // –ú—ã –ø–µ—Ä–µ–¥–∞–µ–º schoolId —É–∂–µ –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞, —Ç–∞–∫ —á—Ç–æ –∑–¥–µ—Å—å –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ
        const vacancies = await getVacancies(schoolId);

        if (!vacancies || vacancies.length === 0) {
            return <EmptyState message="–í–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —ç—Ç–æ–π —à–∫–æ–ª—ã."/>;
        }

        return (
            <ul className="space-y-4">
                {vacancies.map((vacancy) => (
                    <li
                        key={vacancy.id}
                        className="bg-white rounded-lg shadow-md p-5 flex justify-between items-center"
                    >
                        <div>
                            <h2 className="text-xl font-semibold">{vacancy.title}</h2>
                            <p className="text-gray-600">{vacancy.rate}</p>
                        </div>
                        <Link
                            href={`/apply/${vacancy.id}`}
                            className="px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-md hover:bg-indigo-700 transition-colors duration-200"
                        >
                            –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É
                        </Link>
                    </li>
                ))}
            </ul>
        );
    } catch (error) {
        console.error("Error in VacancyList component:", error);
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
        return <EmptyState message="–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏."/>;
    }
}

export default async function VacanciesPage({params}) {
    const {schoolId} = await params;

    // üí° –ö–ª—é—á–µ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º schoolId –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.
    const schoolIdAsNumber = parseInt(schoolId, 10);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ schoolId –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º —á–∏—Å–ª–æ–º.
    // –ï—Å–ª–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –æ—à–∏–±–∫–æ–π.
    if (isNaN(schoolIdAsNumber)) {
        return <EmptyState message="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —à–∫–æ–ª—ã."/>;
    }

    return (
        <div className="container mx-auto p-4 max-w-lg">
            <h1 className="text-3xl font-bold mb-6 text-center">–í–∞–∫–∞–Ω—Å–∏–∏</h1>
            {/* –ü–µ—Ä–µ–¥–∞–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç */}
            <VacancyList schoolId={schoolIdAsNumber}/>
        </div>
    );
}